{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/NewExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","React","createElement","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","onChange","event","onFilterChange","target","value","selected","ExpensesList","items","map","expense","key","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","apply","_toConsumableArray","ExpensesChart","_step","ChartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","Expenses","_useState","useState","_useState2","_slicedToArray","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","NewExpenseForm","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","_objectSpread","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpenses","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c9a99109.chunk.js","sourcesContent":["/** @format */\r\nimport React from \"react\";\r\nimport \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","/** @format */\r\n\r\nimport \"./Card.css\";\r\nimport React from \"react\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","/** @format */\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n\r\n\r\n \r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n     \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"./expensesFilter.css\";\r\n\r\nfunction ExpensesFilter(props) {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>filter by year</label>\r\n        <select onChange={dropdownChangeHandler} value={props.selected}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpensesFilter;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"./expensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  let expenseContent = <p>No expenses found</p>;\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n      ;\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"./chartBar.css\";\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%'\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = props => {\r\n\r\n\r\n  let ChartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n    ];\r\n    \r\n    for (let expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth()\r\n        ChartDataPoints[expenseMonth].value += expense.amount\r\n}\r\n\r\nreturn <Chart dataPoints = {ChartDataPoints} />\r\n}\r\nexport default ExpensesChart","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport ExpenseItem from \"../Expenses/ExpenseItem\";\r\nimport \"../Expenses/expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onFilterChange={filterChangeHandler} />\r\n\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./expenseForm.css\";\r\n\r\nconst NewExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\"); // empty strings to indicate that the initial value of these states are empty\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value); // we then use the setEnteredTitle() method to update the values\r\n  };\r\n\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); // preventDefault prevents the form from reloading when we trigger the submit action on button\r\n\r\n    // expenseData object to store all the data collected from the form to be accessed in another component\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      date: new Date(enteredDate),\r\n      amount: +enteredAmount,\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    // To reset the values of the various fields in the form after submission\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label> Title </label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label> Amount </label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label> Date </label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type= 'button' onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewExpenseForm;\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./newExpense.css\";\r\nimport NewExpenseForm from \"./NewExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n \r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n   const stopEditingHandler = () => {\r\n     setIsEditing(false);\r\n   };\r\n\r\n \r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {isEditing && (\r\n        <NewExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />\r\n      )}\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","/** @format */\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSE = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return[expense, ...prevExpenses]\n    })\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}